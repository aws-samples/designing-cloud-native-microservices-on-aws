#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("aws-cdk-lib");
const network_stack_1 = require("../lib/stacks/network-stack");
const database_stack_1 = require("../lib/stacks/database-stack");
const lambda_stack_1 = require("../lib/stacks/lambda-stack");
const eks_stack_1 = require("../lib/stacks/eks-stack");
const eks_pipeline_stack_1 = require("../lib/stacks/eks-pipeline-stack");
const monitoring_stack_1 = require("../lib/stacks/monitoring-stack");
const app = new cdk.App();
// Get environment configuration - force us-west-2
const env = {
    region: 'us-west-2',
    account: '584518143473',
};
const stage = app.node.tryGetContext('stage') || 'dev';
const stackPrefix = `CoffeeShop-${stage}`;
// Network Stack - VPC, Subnets, Security Groups
const networkStack = new network_stack_1.NetworkStack(app, `${stackPrefix}-Network`, {
    env,
    description: 'CoffeeShop Network Infrastructure',
});
// Database Stack - DynamoDB Tables
const databaseStack = new database_stack_1.DatabaseStack(app, `${stackPrefix}-Database`, {
    env,
    description: 'CoffeeShop Database Infrastructure',
});
// Lambda Stack - Serverless Functions
const lambdaStack = new lambda_stack_1.LambdaStack(app, `${stackPrefix}-Lambda`, {
    env,
    vpc: networkStack.vpc,
    orderTable: databaseStack.orderTable,
    coffeeTable: databaseStack.coffeeTable,
    description: 'CoffeeShop Lambda Functions',
});
// EKS Stack - Kubernetes Services
const eksStack = new eks_stack_1.EksStack(app, `${stackPrefix}-EKS`, {
    env,
    vpc: networkStack.vpc,
    orderTable: databaseStack.orderTable,
    coffeeTable: databaseStack.coffeeTable,
    description: 'CoffeeShop EKS Services',
});
// Pipeline Stack - CI/CD for EKS
const pipelineStack = new eks_pipeline_stack_1.EksPipelineStack(app, `${stackPrefix}-Pipeline`, {
    env,
    ecrRepositories: eksStack.ecrRepositories,
    eksCluster: eksStack.cluster,
    description: 'CoffeeShop EKS CI/CD Pipeline',
});
// Monitoring Stack - CloudWatch, Alarms, Dashboard
const monitoringStack = new monitoring_stack_1.MonitoringStack(app, `${stackPrefix}-Monitoring`, {
    env,
    lambdaFunctions: lambdaStack.functions,
    eksCluster: eksStack.cluster,
    description: 'CoffeeShop EKS Monitoring and Observability',
});
// Add dependencies
databaseStack.addDependency(networkStack);
lambdaStack.addDependency(databaseStack);
eksStack.addDependency(databaseStack);
pipelineStack.addDependency(eksStack);
monitoringStack.addDependency(lambdaStack);
monitoringStack.addDependency(eksStack);
// Tags
cdk.Tags.of(app).add('Project', 'CoffeeShop');
cdk.Tags.of(app).add('Environment', stage);
cdk.Tags.of(app).add('ManagedBy', 'CDK');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLHVDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsK0RBQTJEO0FBQzNELGlFQUE2RDtBQUM3RCw2REFBeUQ7QUFDekQsdURBQW1EO0FBQ25ELHlFQUFvRTtBQUNwRSxxRUFBaUU7QUFFakUsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7QUFFMUIsa0RBQWtEO0FBQ2xELE1BQU0sR0FBRyxHQUFHO0lBQ1YsTUFBTSxFQUFFLFdBQVc7SUFDbkIsT0FBTyxFQUFFLGNBQWM7Q0FDeEIsQ0FBQztBQUVGLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQztBQUN2RCxNQUFNLFdBQVcsR0FBRyxjQUFjLEtBQUssRUFBRSxDQUFDO0FBRTFDLGdEQUFnRDtBQUNoRCxNQUFNLFlBQVksR0FBRyxJQUFJLDRCQUFZLENBQUMsR0FBRyxFQUFFLEdBQUcsV0FBVyxVQUFVLEVBQUU7SUFDbkUsR0FBRztJQUNILFdBQVcsRUFBRSxtQ0FBbUM7Q0FDakQsQ0FBQyxDQUFDO0FBRUgsbUNBQW1DO0FBQ25DLE1BQU0sYUFBYSxHQUFHLElBQUksOEJBQWEsQ0FBQyxHQUFHLEVBQUUsR0FBRyxXQUFXLFdBQVcsRUFBRTtJQUN0RSxHQUFHO0lBQ0gsV0FBVyxFQUFFLG9DQUFvQztDQUNsRCxDQUFDLENBQUM7QUFFSCxzQ0FBc0M7QUFDdEMsTUFBTSxXQUFXLEdBQUcsSUFBSSwwQkFBVyxDQUFDLEdBQUcsRUFBRSxHQUFHLFdBQVcsU0FBUyxFQUFFO0lBQ2hFLEdBQUc7SUFDSCxHQUFHLEVBQUUsWUFBWSxDQUFDLEdBQUc7SUFDckIsVUFBVSxFQUFFLGFBQWEsQ0FBQyxVQUFVO0lBQ3BDLFdBQVcsRUFBRSxhQUFhLENBQUMsV0FBVztJQUN0QyxXQUFXLEVBQUUsNkJBQTZCO0NBQzNDLENBQUMsQ0FBQztBQUVILGtDQUFrQztBQUNsQyxNQUFNLFFBQVEsR0FBRyxJQUFJLG9CQUFRLENBQUMsR0FBRyxFQUFFLEdBQUcsV0FBVyxNQUFNLEVBQUU7SUFDdkQsR0FBRztJQUNILEdBQUcsRUFBRSxZQUFZLENBQUMsR0FBRztJQUNyQixVQUFVLEVBQUUsYUFBYSxDQUFDLFVBQVU7SUFDcEMsV0FBVyxFQUFFLGFBQWEsQ0FBQyxXQUFXO0lBQ3RDLFdBQVcsRUFBRSx5QkFBeUI7Q0FDdkMsQ0FBQyxDQUFDO0FBRUgsaUNBQWlDO0FBQ2pDLE1BQU0sYUFBYSxHQUFHLElBQUkscUNBQWdCLENBQUMsR0FBRyxFQUFFLEdBQUcsV0FBVyxXQUFXLEVBQUU7SUFDekUsR0FBRztJQUNILGVBQWUsRUFBRSxRQUFRLENBQUMsZUFBZTtJQUN6QyxVQUFVLEVBQUUsUUFBUSxDQUFDLE9BQU87SUFDNUIsV0FBVyxFQUFFLCtCQUErQjtDQUM3QyxDQUFDLENBQUM7QUFFSCxtREFBbUQ7QUFDbkQsTUFBTSxlQUFlLEdBQUcsSUFBSSxrQ0FBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLFdBQVcsYUFBYSxFQUFFO0lBQzVFLEdBQUc7SUFDSCxlQUFlLEVBQUUsV0FBVyxDQUFDLFNBQVM7SUFDdEMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxPQUFPO0lBQzVCLFdBQVcsRUFBRSw2Q0FBNkM7Q0FDM0QsQ0FBQyxDQUFDO0FBRUgsbUJBQW1CO0FBQ25CLGFBQWEsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDMUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUN6QyxRQUFRLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3RDLGFBQWEsQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDdEMsZUFBZSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUMzQyxlQUFlLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRXhDLE9BQU87QUFDUCxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLFlBQVksQ0FBQyxDQUFDO0FBQzlDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDM0MsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxLQUFLLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcbmltcG9ydCAnc291cmNlLW1hcC1zdXBwb3J0L3JlZ2lzdGVyJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgeyBOZXR3b3JrU3RhY2sgfSBmcm9tICcuLi9saWIvc3RhY2tzL25ldHdvcmstc3RhY2snO1xuaW1wb3J0IHsgRGF0YWJhc2VTdGFjayB9IGZyb20gJy4uL2xpYi9zdGFja3MvZGF0YWJhc2Utc3RhY2snO1xuaW1wb3J0IHsgTGFtYmRhU3RhY2sgfSBmcm9tICcuLi9saWIvc3RhY2tzL2xhbWJkYS1zdGFjayc7XG5pbXBvcnQgeyBFa3NTdGFjayB9IGZyb20gJy4uL2xpYi9zdGFja3MvZWtzLXN0YWNrJztcbmltcG9ydCB7IEVrc1BpcGVsaW5lU3RhY2sgfSBmcm9tICcuLi9saWIvc3RhY2tzL2Vrcy1waXBlbGluZS1zdGFjayc7XG5pbXBvcnQgeyBNb25pdG9yaW5nU3RhY2sgfSBmcm9tICcuLi9saWIvc3RhY2tzL21vbml0b3Jpbmctc3RhY2snO1xuXG5jb25zdCBhcHAgPSBuZXcgY2RrLkFwcCgpO1xuXG4vLyBHZXQgZW52aXJvbm1lbnQgY29uZmlndXJhdGlvbiAtIGZvcmNlIHVzLXdlc3QtMlxuY29uc3QgZW52ID0ge1xuICByZWdpb246ICd1cy13ZXN0LTInLFxuICBhY2NvdW50OiAnNTg0NTE4MTQzNDczJyxcbn07XG5cbmNvbnN0IHN0YWdlID0gYXBwLm5vZGUudHJ5R2V0Q29udGV4dCgnc3RhZ2UnKSB8fCAnZGV2JztcbmNvbnN0IHN0YWNrUHJlZml4ID0gYENvZmZlZVNob3AtJHtzdGFnZX1gO1xuXG4vLyBOZXR3b3JrIFN0YWNrIC0gVlBDLCBTdWJuZXRzLCBTZWN1cml0eSBHcm91cHNcbmNvbnN0IG5ldHdvcmtTdGFjayA9IG5ldyBOZXR3b3JrU3RhY2soYXBwLCBgJHtzdGFja1ByZWZpeH0tTmV0d29ya2AsIHtcbiAgZW52LFxuICBkZXNjcmlwdGlvbjogJ0NvZmZlZVNob3AgTmV0d29yayBJbmZyYXN0cnVjdHVyZScsXG59KTtcblxuLy8gRGF0YWJhc2UgU3RhY2sgLSBEeW5hbW9EQiBUYWJsZXNcbmNvbnN0IGRhdGFiYXNlU3RhY2sgPSBuZXcgRGF0YWJhc2VTdGFjayhhcHAsIGAke3N0YWNrUHJlZml4fS1EYXRhYmFzZWAsIHtcbiAgZW52LFxuICBkZXNjcmlwdGlvbjogJ0NvZmZlZVNob3AgRGF0YWJhc2UgSW5mcmFzdHJ1Y3R1cmUnLFxufSk7XG5cbi8vIExhbWJkYSBTdGFjayAtIFNlcnZlcmxlc3MgRnVuY3Rpb25zXG5jb25zdCBsYW1iZGFTdGFjayA9IG5ldyBMYW1iZGFTdGFjayhhcHAsIGAke3N0YWNrUHJlZml4fS1MYW1iZGFgLCB7XG4gIGVudixcbiAgdnBjOiBuZXR3b3JrU3RhY2sudnBjLFxuICBvcmRlclRhYmxlOiBkYXRhYmFzZVN0YWNrLm9yZGVyVGFibGUsXG4gIGNvZmZlZVRhYmxlOiBkYXRhYmFzZVN0YWNrLmNvZmZlZVRhYmxlLFxuICBkZXNjcmlwdGlvbjogJ0NvZmZlZVNob3AgTGFtYmRhIEZ1bmN0aW9ucycsXG59KTtcblxuLy8gRUtTIFN0YWNrIC0gS3ViZXJuZXRlcyBTZXJ2aWNlc1xuY29uc3QgZWtzU3RhY2sgPSBuZXcgRWtzU3RhY2soYXBwLCBgJHtzdGFja1ByZWZpeH0tRUtTYCwge1xuICBlbnYsXG4gIHZwYzogbmV0d29ya1N0YWNrLnZwYyxcbiAgb3JkZXJUYWJsZTogZGF0YWJhc2VTdGFjay5vcmRlclRhYmxlLFxuICBjb2ZmZWVUYWJsZTogZGF0YWJhc2VTdGFjay5jb2ZmZWVUYWJsZSxcbiAgZGVzY3JpcHRpb246ICdDb2ZmZWVTaG9wIEVLUyBTZXJ2aWNlcycsXG59KTtcblxuLy8gUGlwZWxpbmUgU3RhY2sgLSBDSS9DRCBmb3IgRUtTXG5jb25zdCBwaXBlbGluZVN0YWNrID0gbmV3IEVrc1BpcGVsaW5lU3RhY2soYXBwLCBgJHtzdGFja1ByZWZpeH0tUGlwZWxpbmVgLCB7XG4gIGVudixcbiAgZWNyUmVwb3NpdG9yaWVzOiBla3NTdGFjay5lY3JSZXBvc2l0b3JpZXMsXG4gIGVrc0NsdXN0ZXI6IGVrc1N0YWNrLmNsdXN0ZXIsXG4gIGRlc2NyaXB0aW9uOiAnQ29mZmVlU2hvcCBFS1MgQ0kvQ0QgUGlwZWxpbmUnLFxufSk7XG5cbi8vIE1vbml0b3JpbmcgU3RhY2sgLSBDbG91ZFdhdGNoLCBBbGFybXMsIERhc2hib2FyZFxuY29uc3QgbW9uaXRvcmluZ1N0YWNrID0gbmV3IE1vbml0b3JpbmdTdGFjayhhcHAsIGAke3N0YWNrUHJlZml4fS1Nb25pdG9yaW5nYCwge1xuICBlbnYsXG4gIGxhbWJkYUZ1bmN0aW9uczogbGFtYmRhU3RhY2suZnVuY3Rpb25zLFxuICBla3NDbHVzdGVyOiBla3NTdGFjay5jbHVzdGVyLFxuICBkZXNjcmlwdGlvbjogJ0NvZmZlZVNob3AgRUtTIE1vbml0b3JpbmcgYW5kIE9ic2VydmFiaWxpdHknLFxufSk7XG5cbi8vIEFkZCBkZXBlbmRlbmNpZXNcbmRhdGFiYXNlU3RhY2suYWRkRGVwZW5kZW5jeShuZXR3b3JrU3RhY2spO1xubGFtYmRhU3RhY2suYWRkRGVwZW5kZW5jeShkYXRhYmFzZVN0YWNrKTtcbmVrc1N0YWNrLmFkZERlcGVuZGVuY3koZGF0YWJhc2VTdGFjayk7XG5waXBlbGluZVN0YWNrLmFkZERlcGVuZGVuY3koZWtzU3RhY2spO1xubW9uaXRvcmluZ1N0YWNrLmFkZERlcGVuZGVuY3kobGFtYmRhU3RhY2spO1xubW9uaXRvcmluZ1N0YWNrLmFkZERlcGVuZGVuY3koZWtzU3RhY2spO1xuXG4vLyBUYWdzXG5jZGsuVGFncy5vZihhcHApLmFkZCgnUHJvamVjdCcsICdDb2ZmZWVTaG9wJyk7XG5jZGsuVGFncy5vZihhcHApLmFkZCgnRW52aXJvbm1lbnQnLCBzdGFnZSk7XG5jZGsuVGFncy5vZihhcHApLmFkZCgnTWFuYWdlZEJ5JywgJ0NESycpOyJdfQ==